package com.apache.elibrary.webservice.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2018-09-13T23:44:11.956-04:00
 * Generated source version: 3.0.3
 * 
 */
@WebServiceClient(name = "elibraryServiceImpl", 
                  wsdlLocation = "file:/C:/Users/Brindha/MavenSpringWorkspace/ElibraryPortal/src/main/resources/ElibraryService.wsdl",
                  targetNamespace = "http://service.webservice.elibrary.apache.com/") 
public class ElibraryServiceImpl extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.webservice.elibrary.apache.com/", "elibraryServiceImpl");
    public final static QName ElibraryServiceImplPort = new QName("http://service.webservice.elibrary.apache.com/", "ElibraryServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Brindha/MavenSpringWorkspace/ElibraryPortal/src/main/resources/ElibraryService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ElibraryServiceImpl.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/Brindha/MavenSpringWorkspace/ElibraryPortal/src/main/resources/ElibraryService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ElibraryServiceImpl(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ElibraryServiceImpl(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ElibraryServiceImpl() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns ElibraryService
     */
    @WebEndpoint(name = "ElibraryServiceImplPort")
    public ElibraryService getElibraryServiceImplPort() {
        return super.getPort(ElibraryServiceImplPort, ElibraryService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ElibraryService
     */
    @WebEndpoint(name = "ElibraryServiceImplPort")
    public ElibraryService getElibraryServiceImplPort(WebServiceFeature... features) {
        return super.getPort(ElibraryServiceImplPort, ElibraryService.class, features);
    }

}
